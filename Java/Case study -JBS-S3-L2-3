CASE STUDY: JBS-S3-L2-3-Search Customers By City MY CODE: import java.util.*; public class Source { static String customerDetails[][]=new String[5][3]; public static String[] getCustomer(String key) { customerDetails[0][0]="1001"; customerDetails[0][1]="Raj"; customerDetails[0][2]="Chennai"; customerDetails[1][0]="1008"; customerDetails[1][1]="Akshay"; customerDetails[1][2]="Pune"; customerDetails[2][0]="1002"; customerDetails[2][1]="Simran"; customerDetails[2][2]="Amritsar"; customerDetails[3][0]="1204"; customerDetails[3][1]="Gaurav"; customerDetails[3][2]="Delhi"; customerDetails[4][0]="1005"; customerDetails[4][1]="Ganesh"; customerDetails[4][2]="Chennai"; int beg=0; int end=customerDetails.length-1; while(beg <= end) { int mid = (beg + end) / 2; if(customerDetails[mid][2].compareToIgnoreCase(key) == 0) { return customerDetails[mid]; } else if(customerDetails[mid][2].compareToIgnoreCase(key) >= 0) { end = mid - 1; } else { beg = mid + 1; } } return null; } public static void main(String args[] ) throws Exception { Scanner sc = new Scanner(System.in); String key = sc.nextLine(); String customer[] = getCustomer(key); if(customer == null) { System.out.println("No Record Found"); } else { System.out.println(customer[0]); System.out.println(customer[1]); System.out.println(customer[2]); } } } ISSUE: First of all for Binary Search, the input should be sorted, however the given input is not sorted. (Also tried sorting it myself) Secondly, they are expecting 2 values to be outputted for input "Chennai" But in binary search, we only get the index of first occurrence of the key. How are we supposed to do that, since given data has 2 values with "Chennai" and expected output also has 2 values. The above code is giving me Partially correct 16.7 Points.
